# name: Tests

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       max-parallel: 1
#       matrix:
#         node-version: [20.x, 21.x]
#         mongodb-version: ['6.0', '7.0']

#     steps:
#     - name: Git checkout
#       uses: actions/checkout@v4

#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#         cache-dependency-path: server/package-lock.json

#     - name: Start MongoDB
#       uses: supercharge/mongodb-github-action@1.10.0
#       with:
#         mongodb-version: ${{ matrix.mongodb-version }}

#     - name: Set environment variables
#       run: echo "ATLAS_URI=${{ secrets.ATLAS_URI }}" >> $GITHUB_ENV

#     - name: Install dependencies 
#       run: npm ci
#       working-directory: server
    
#     - name: Running tests
#       run: npm run test_github
#       working-directory: server
#       env:
#         ATLAS_URI: ${{ secrets.ATLAS_URI }}
#         ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      
name: Tests and Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: db-access-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: '6.0'

    - name: Install dependencies
      run: npm ci
      working-directory: server

    - name: Run tests
      run: npm run test_github
      working-directory: server
      env:
        ATLAS_URI: ${{ secrets.ATLAS_URI }}
        ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}

    - name: Upload coverage to Coveralls
      if: ${{ success() }}
      run: npm run coverage
      working-directory: server
      env:
        ATLAS_URI: ${{ secrets.ATLAS_URI }}
        ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
    
    - name: Coveralls
      uses: coverallsapp/github-action@v2.2.3
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
